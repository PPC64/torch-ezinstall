#!/usr/bin/env bash

######################################################################
# This script installs required dependencies for Torch7
######################################################################

if [[ "$(uname -m)" == 'ppc64le' ]]; then
    if [[ -r /etc/os-release ]]; then
        # this will get the required information without dirtying any env state
        DIST_VERS="$( ( . /etc/os-release &>/dev/null
        echo "$ID $VERSION_ID") )"
        DISTRO="${DIST_VERS%% *}" # get our distro name
        VERSION="${DIST_VERS##* }" # get our version number
    elif [[ -r /etc/redhat-release ]]; then
        DIST_VERS=( $( cat /etc/redhat-release ) ) # make the file an array
        DISTRO="${DIST_VERS[0],,}" # get the first element and get lcase
        VERS="${DIST_VERS[2]}" # get the third element (version)
    elif [[ -r /etc/lsb-release ]]; then
        DIST_VERS="$( ( . /etc/lsb-release &>/dev/null
        echo "${DISTRIB_ID,,} $DISTRIB_RELEASE") )"
        DISTRO="${DIST_VERS%% *}" # get our distro name
        VERSION="${DIST_VERS##* }" # get our version number
    else # well, I'm out of ideas for now
        echo '==> Failed to determine distro and version.'
        exit 1
    fi

    # Detect debian
    if [[ "$DISTRO" = "debian" ]]; then
        distribution="debian"
    else
        echo '==> Only Debian distributions are supported.'
        exit 1
    fi

    # Install dependencies for Torch:
    if [[ $distribution == 'debian' ]]; then
        declare -a target_pkgs
        target_pkgs=( curl cmake build-essential gcc g++ \
            cmake libreadline-dev git-core libqt4-dev \
            libjpeg8-dev libpng12-dev libncurses5-dev \
            imagemagick gfortran unzip gnuplot libx11-dev \
            gnuplot-x11 ipython )
        sudo apt-get update
        sudo apt-get install -y software-properties-common
        sudo add-apt-repository 'deb http://download.unesp.br/linux/debian/ unstable main contrib non-free' 
        sudo apt-get update
        sudo apt-get install -y "${target_pkgs[@]}"
    fi
else
    # Unsupported
    echo '==> platform not supported, aborting'
    exit 1
fi

ipython_exists=$(command -v ipython)
if [[ $ipython_exists ]]; then {
    ipython_version=$(ipython --version|cut -f1 -d'.')
    if [[ $ipython_version != 2 && $ipython_version != 3 ]]; then {
        echo 'WARNING: Your ipython version is too old.  Type "ipython --version" to see this.  Should be at least version 2'
    } fi
} fi

# Done.
echo "==> Torch7's dependencies have been installed"

